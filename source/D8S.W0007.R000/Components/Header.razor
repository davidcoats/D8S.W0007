@rendermode InteractiveWebAssembly

@inject NavigationManager NavigationManager


<header class="bg-white">
    <nav class="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8" aria-label="Global">
        <a href="@IPageRoutes.Home" class="-m-1.5 p-1.5">
            <span class="font-normal">Riya and Vedant</span>
            @* <img class="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600" alt=""> *@
        </a>
        <div class="flex lg:hidden">
            <button type="button" class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
                @onclick=this.On_MobileMenuButtonClick>
                <span class="sr-only">Open main menu</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                </svg>
            </button>
        </div>
        <div class="hidden lg:flex lg:gap-x-12">
            <a href="@IPageRoutes.Home" class="text-sm @(this.Get_FontToken(IPageRoutes.Home)) leading-6 text-gray-900">Home</a>

            <a href="@IPageRoutes.OurStory" class="text-sm @(this.Get_FontToken(IPageRoutes.OurStory)) leading-6 text-gray-900">Our Story</a>
            <a href="@IPageRoutes.Schedule" class="text-sm @(this.Get_FontToken(IPageRoutes.Schedule)) leading-6 text-gray-900">Schedule</a>
            <a href="@IPageRoutes.Location" class="text-sm @(this.Get_FontToken(IPageRoutes.Location)) leading-6 text-gray-900">Location</a>
            <a href="@IPageRoutes.RSVP" class="text-sm @(this.Get_FontToken(IPageRoutes.RSVP)) leading-6 text-gray-900">RSVP</a>
        </div>
    </nav>
    
    <MobileMenu @ref=this.MobileMenu/>
</header>


@code{
    /// <summary>
    /// Documentation will not appear for this component in consumer Razor files unless there is some sort of documentation in the Razor markup.
    /// Documentation for the component is in the code-behind file.
    /// </summary>
    [Parameter]
    public string DummyDocumentationParameter { get; set; }

    [Parameter]
    public MobileMenu MobileMenu { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.NavigationManager.LocationChanged += (_, _) => this.StateHasChanged();
    }

    private void On_MobileMenuButtonClick()
    {
        this.MobileMenu.Toggle();
    }

    private string Get_FontToken(string pageRoute)
    {
        var currentPageUriString = this.NavigationManager.Uri;

        var currentPageUri = new Uri(currentPageUriString);

        var currentPagePath = currentPageUri.LocalPath;

        var isCurrentPage = currentPagePath == pageRoute;

        var output = isCurrentPage
            ? "font-bold"
            : "font-normal"
            ;

        return output;
    }
}
