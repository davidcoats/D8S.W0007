using System;

using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;

using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;

//// <auto-generated/>
//global using global::Microsoft.AspNetCore.Builder;
//global using global::Microsoft.AspNetCore.Hosting;
//global using global::Microsoft.AspNetCore.Http;
//global using global::Microsoft.AspNetCore.Routing;
//global using global::Microsoft.Extensions.Configuration;
//global using global::Microsoft.Extensions.DependencyInjection;
//global using global::Microsoft.Extensions.Hosting;
//global using global::Microsoft.Extensions.Logging;
//global using global::System;
//global using global::System.Collections.Generic;
//global using global::System.IO;
//global using global::System.Linq;
//global using global::System.Net.Http;
//global using global::System.Net.Http.Json;
//global using global::System.Threading;
//global using global::System.Threading.Tasks;

using D8S.W0007.Components;


namespace D8S.W0007
{
    class Program
    {
        static void Main()
        {
            //var builder = WebApplication.CreateBuilder(args);
            var builder = WebApplication.CreateBuilder();

            // Add services to the container.
            builder.Services.AddRazorComponents()
                .AddInteractiveServerComponents()
                .AddInteractiveWebAssemblyComponents()
                ;

            var app = builder.Build();

            // Configure the HTTP request pipeline.
            if (app.Environment.IsDevelopment())
            {
                app.UseWebAssemblyDebugging();
            }
            else
            {
                app.UseExceptionHandler("/Error", createScopeForErrors: true);
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }

            if (builder.Environment.IsProduction())
            {
                builder.WebHost.UseUrls("http://localhost:5005");
            }

            app.UseHttpsRedirection();

            app.UseStaticFiles();
            app.UseAntiforgery();

            app.MapRazorComponents<App>()
                .AddInteractiveServerRenderMode()
                .AddInteractiveWebAssemblyRenderMode()
                .AddAdditionalAssemblies(typeof(R000.Components._Imports).Assembly)
                ;

            app.Run();
        }
    }
}